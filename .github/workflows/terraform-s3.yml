name: Terraform S3 Bucket Management

on:
  push:
    branches:
      - main  # Change this to the branch you want to use for CI/CD
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: production  # or staging, if you want to test before production

    steps:
    # Checkout the repository
    - name: Checkout Repository
      uses: actions/checkout@v2

    # Set up Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.4.5  # Use the required Terraform version

    # Set AWS credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    # Initialize Terraform
    - name: Terraform Init
      run: terraform init

    # Format Check
    - name: Terraform Format Check
      run: terraform fmt -check -recursive

    # Terraform Validation
    - name: Terraform Validate
      run: terraform validate

    # Terraform Plan
    - name: Terraform Plan
      id: plan
      run: terraform plan -out=tfplan
      env:
        TF_VAR_aws_region: ${{ secrets.AWS_DEFAULT_REGION }}

    # Save the Terraform Plan as an artifact (optional, for inspection)
    - name: Upload Plan Artifact
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: tfplan
        path: ./tfplan

    # Terraform Apply (requires manual approval in Pull Requests)
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve tfplan
      env:
        TF_VAR_aws_region: ${{ secrets.AWS_DEFAULT_REGION }}
